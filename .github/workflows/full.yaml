# ╭───────────────────────────────────────────────────────────────────────────╮
# │                               REQUIREMENTS                                │
# ╰───────────────────────────────────────────────────────────────────────────╯
# Used to upload to Google Drive
# RCLONE_CONF_B64 = Configuration of rCLone to allow access to Google Drive.
# ENV_B64 = Base64 Version of the .env file.

name: 🎢 Full Video Constructor


on:
    # Run Via a webhook only
    workflow_dispatch:
      inputs:
        prompt:
          description: 'Midjourney Prompt'     
          required: true


jobs:

    midjourney:
        runs-on: ubuntu-latest

        steps:

            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3


            # ╭───────────────────────────────────────────────────────╮
            # │      DECODE THE BASE64 CONFIGS READY TO BE USED       │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Base64 decode Configs
              run: |
                echo "${{ secrets.RCLONE_CONF_B64 }}" | base64 --decode > rclone.conf
                echo "${{ secrets.ENV_B64 }}" | base64 --decode > .env


            # ╭───────────────────────────────────────────────────────╮
            # │                    Install rClone                     │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📹 DOWNLOAD - Install rClone
              if: ${{ env.VC_DOWNLOAD_RUN }}
              run: |
                sudo apt install rclone

                

            # ╭───────────────────────────────────────────────────────╮
            # │                  Run outputs script                   │
            # ╰───────────────────────────────────────────────────────╯
            - name: 📬 OUTPUTS - Run Outputs
              if: ${{ env.VC_OUTPUT_RUN }}
              run: |
                cat config.json | jq -r '.output.outputs' > ${GITHUB_WORKSPACE}/output_config.json
                cat ./output_config.json
                ./scripts/outputs/outputs.sh \
                    --json ${GITHUB_WORKSPACE}/output_config.json \
                    --rclone ./rclone.conf \
                    --sshuser ${{ secrets.SSH_USER }} \
                    --sshpass ${{ secrets.SSH_PASS }}



     

            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # ╭───────────────────────────────────────────────────────╮
            # │                          SSH                          │
            # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1