# ╭───────────────────────────────────────────────────────────────────────────╮
# │                               REQUIREMENTS                                │
# ╰───────────────────────────────────────────────────────────────────────────╯

name: 🏞️ Generate Midjourney Image Standalone


on:
    # Run Via a webhook only
    workflow_dispatch:
      inputs:
        prompt:
          description: 'Midjourney Prompt'     
          required: true
        return_webhook:
          description: "Return Webhook URL"
          required: true
          

jobs:

    midjourney:
        runs-on: ubuntu-latest
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:

            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3



            # ╭───────────────────────────────────────────────────────╮
            # │                      Setup Node                       │
            # ╰───────────────────────────────────────────────────────╯
            - uses: actions/setup-node@v3.6.0
              with:
                node-version: "18.x"



            # ╭───────────────────────────────────────────────────────╮
            # │      DECODE THE BASE64 CONFIGS READY TO BE USED       │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Base64 decode Configs
              run: |
                echo "${{ secrets.ENV_B64 }}" | base64 --decode > .env




            # ╭───────────────────────────────────────────────────────╮
            # │                 Setup Midjourney API                  │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🏞️ Midjourney - Setup
              run: |
                npm install



            # ╭───────────────────────────────────────────────────────╮
            # │                  Run Midjourney API                   │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🏞️ Midjourney - Run
              run: |
                npx tsx imagine.ts "${{ github.event.inputs.prompt }}" 1
                ls -la
                cat midjourney_images_quad_urls.txt
                cat midjourney_images_upscaled_urls.txt


            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │               Once the results are complete, send webhook                │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
        
            - name: Trigger Return Webhook
              continue-on-error: true
              run: |
                file_content=$(cat midjourney_images_upscaled_urls.txt)
                curl -X POST \
                  -H "Content-Type: text/plain" \
                  --data-raw "$file_content" \
                  ${{ github.event.inputs.return_webhook }}


            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # ╭───────────────────────────────────────────────────────╮
            # │                          SSH                          │
            # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1