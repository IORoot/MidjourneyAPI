# ╭───────────────────────────────────────────────────────────────────────────╮
# │                               REQUIREMENTS                                │
# ╰───────────────────────────────────────────────────────────────────────────╯

name: 🏞️ Generate Midjourney Image Standalone


on:
    # Run Via a webhook only
    workflow_dispatch:
      inputs:
        prompt:
          description: 'Midjourney Prompt'     
          required: true
        return_webhook:
          description: "Return Webhook URL"
          required: true
        return_token:
          description: "Return Webhook Token"
          required: true
        post_type:
          description: "Post Type to update"
          required: true
        post_id:
          description: "ID Of Post to update"
          required: true
          

jobs:

    midjourney:
        runs-on: ubuntu-latest
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:

            # ╭───────────────────────────────────────────────────────╮
            # │             GET CONTENTS OF CURRENT REPO              │
            # ╰───────────────────────────────────────────────────────╯
            - name: 🎛️ SETUP - Checkout Repo
              uses: actions/checkout@v3



            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │               Once the results are complete, send webhook                │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
        
            # URL=$(cat midjourney_images_upscaled_urls.txt)
            - name: Trigger Return Webhook
              continue-on-error: true
              run: |
                URL="https://cdn.discordapp.com/attachments/1096417490558521389/1307636722837884938/ioroot_Photorealistic_photo_on_parkour_and_the_topic_c0c3dae0-b8d4-4cb6-96bf-1fd934a0f890.png?ex=673b0719&is=6739b599&hm=96d2367471481a9bc906469a85faf345d4bed937146d9bcafb81632716f0af98&"
                curl -X PUT ${{ github.event.inputs.return_webhook }} \
                  -H "Content-Type: application/json" \
                  -H "X-API-TOKEN: ${{ github.event.inputs.return_token }}" \
                  -d "{
                      \"post_type\": \"${{ github.event.inputs.post_type }}\",
                      \"post_id\": \"${{ github.event.inputs.post_id }}\",
                      \"url\": \"${URL}\",
                  }"



            # # ╭───────────────────────────────────────────────────────╮
            # # │                      Setup Node                       │
            # # ╰───────────────────────────────────────────────────────╯
            # - uses: actions/setup-node@v3.6.0
            #   with:
            #     node-version: "18.x"



            # # ╭───────────────────────────────────────────────────────╮
            # # │      DECODE THE BASE64 CONFIGS READY TO BE USED       │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🎛️ SETUP - Base64 decode Configs
            #   run: |
            #     echo "${{ secrets.ENV_B64 }}" | base64 --decode > .env




            # # ╭───────────────────────────────────────────────────────╮
            # # │                 Setup Midjourney API                  │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🏞️ Midjourney - Setup
            #   run: |
            #     npm install



            # # ╭───────────────────────────────────────────────────────╮
            # # │                  Run Midjourney API                   │
            # # ╰───────────────────────────────────────────────────────╯
            # - name: 🏞️ Midjourney - Run
            #   run: |
            #     npx tsx imagine.ts "${{ github.event.inputs.prompt }}" 1
            #     ls -la
            #     cat midjourney_images_quad_urls.txt
            #     cat midjourney_images_upscaled_urls.txt


            # # ╭──────────────────────────────────────────────────────────────────────────╮
            # # │                                                                          │░
            # # │               Once the results are complete, send webhook                │░
            # # │                                                                          │░
            # # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
        
            # - name: Trigger Return Webhook
            #   continue-on-error: true
            #   run: |
            #     URL=$(cat midjourney_images_upscaled_urls.txt)
            #     curl -X PUT \
            #       -H "Content-Type: text/plain" \
            #       -H "X-API-TOKEN: ${{ github.event.inputs.return_token }}" \
            #       --data-raw "$file_content" \
            #       ${{ github.event.inputs.return_webhook }}


            #     curl -X PUT ${{ github.event.inputs.return_webhook }} \
            #       -H "Content-Type: application/json" \
            #       -H "X-API-TOKEN: ${{ github.event.inputs.return_token }}" \
            #       -d "{
            #           \"post_type\": \"${{ github.event.inputs.post_type }}\",
            #           \"post_id\": \"${{ github.event.inputs.post_id }}\",
            #           \"url\": \"${URL}\",
            #       }"



            # ╭──────────────────────────────────────────────────────────────────────────╮
            # │                                                                          │░
            # │                                                                          │░
            # │                                DEBUGGERS                                 │░
            # │                                                                          │░
            # │                                                                          │░
            # ╰░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

            # ╭───────────────────────────────────────────────────────╮
            # │                         HTTP                          │
            # ╰───────────────────────────────────────────────────────╯
            # - uses: dsmirc/ngrok-tunnel-action@cd
            #   name: 🪲 DEBUG - Setup NGROK Tunnel
            #   with:
            #     timeout: 1h
            #     port: 8080
            #     ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
            #     tunnel_type: http
            #     save_url_to_filename: tunnelURL.md

            # ╭───────────────────────────────────────────────────────╮
            # │                          SSH                          │
            # ╰───────────────────────────────────────────────────────╯
            # - name: 🪲 DEBUG - Setup upterm session
            #   uses: lhotari/action-upterm@v1